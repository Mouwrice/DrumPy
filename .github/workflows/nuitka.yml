name: Build & Publish Binaries

on:
  push:
    branches:
      - main


jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    defaults:
      run:
        shell: bash

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-pip-wheels
        uses: actions/cache@v3
        with:
          path: ~/.cache
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
      - name: Install library
        run: poetry install --no-interaction
      - run: source $VENV

      - name: Build Executable
        uses: Nuitka/Nuitka-Action@v1.1
        with:
          nuitka-version: main
          script-name: ./drumpy/cli.py
          standalone: true
          onefile: false
          include-plugin-directory: .venv/Lib/site-packages/pygame_gui/data/
          include-data-dir: ./DrumSamples=./DrumSamples
          include-data-files: |
            ./*.task=./
            .venv/Lib/site-packages/pygame_gui/data/*.*=pygame_gui/data/
            .venv/Lib/site-packages/pygame_gui/data/translations/*=pygame_gui/data/translations/
          enable-console: true
          enable-plugins: no-qt
          company-name: Mouwrice
          product-name: DrumPy
          product-version: 0.1.0

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Drumpy-${{ runner.os }}
          path: build/cli.dist
